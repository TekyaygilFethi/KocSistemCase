// <auto-generated />
using System;
using KUSYS.Database.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace KUSYS.Database.Migrations
{
    [DbContext(typeof(KUSYSDbContext))]
    partial class KUSYSDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("KUSYS.Data.POCO.Course", b =>
                {
                    b.Property<string>("CourseId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CourseName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CourseId");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            CourseId = "CSI101",
                            CourseName = "Introduction to Computer Science"
                        },
                        new
                        {
                            CourseId = "CSI102",
                            CourseName = "Algorithms"
                        },
                        new
                        {
                            CourseId = "MAT101",
                            CourseName = "Calculus"
                        },
                        new
                        {
                            CourseId = "PHY101",
                            CourseName = "Physics"
                        });
                });

            modelBuilder.Entity("KUSYS.Data.POCO.Student", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0a64fd1e-0cc9-4995-88ee-f60cf056ffe1"),
                            BirthDate = new DateTime(1996, 6, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Fethi",
                            Lastname = "Tekyaygil",
                            ModifiedDate = new DateTime(2022, 11, 24, 17, 36, 24, 773, DateTimeKind.Local).AddTicks(6742),
                            UserId = new Guid("f9960263-5cef-4ade-ada1-ba4768fbac37")
                        },
                        new
                        {
                            Id = new Guid("6d9214af-cd43-40b8-829f-a9261daa82b5"),
                            BirthDate = new DateTime(1997, 5, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Yasemin",
                            Lastname = "Özen",
                            ModifiedDate = new DateTime(2022, 11, 24, 17, 36, 24, 773, DateTimeKind.Local).AddTicks(6749),
                            UserId = new Guid("66ab82f0-9892-4740-af46-97ffbd028d0c")
                        },
                        new
                        {
                            Id = new Guid("2c2425ec-158d-439c-937d-907bb804c509"),
                            BirthDate = new DateTime(2008, 10, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Taha",
                            Lastname = "Tekyaygil",
                            ModifiedDate = new DateTime(2022, 11, 24, 17, 36, 24, 773, DateTimeKind.Local).AddTicks(6752),
                            UserId = new Guid("777b651d-c644-45f7-af95-2c2299d51db3")
                        });
                });

            modelBuilder.Entity("KUSYS.Data.POCO.StudentCourses", b =>
                {
                    b.Property<Guid>("StudentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CourseId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("StudentId", "CourseId");

                    b.HasIndex("CourseId");

                    b.ToTable("StudentCourses");

                    b.HasData(
                        new
                        {
                            StudentId = new Guid("0a64fd1e-0cc9-4995-88ee-f60cf056ffe1"),
                            CourseId = "CSI101",
                            ModifiedDate = new DateTime(2022, 11, 24, 17, 36, 24, 773, DateTimeKind.Local).AddTicks(6747)
                        },
                        new
                        {
                            StudentId = new Guid("0a64fd1e-0cc9-4995-88ee-f60cf056ffe1"),
                            CourseId = "MAT101",
                            ModifiedDate = new DateTime(2022, 11, 24, 17, 36, 24, 773, DateTimeKind.Local).AddTicks(6748)
                        },
                        new
                        {
                            StudentId = new Guid("6d9214af-cd43-40b8-829f-a9261daa82b5"),
                            CourseId = "CSI102",
                            ModifiedDate = new DateTime(2022, 11, 24, 17, 36, 24, 773, DateTimeKind.Local).AddTicks(6751)
                        },
                        new
                        {
                            StudentId = new Guid("2c2425ec-158d-439c-937d-907bb804c509"),
                            CourseId = "CSI101",
                            ModifiedDate = new DateTime(2022, 11, 24, 17, 36, 24, 773, DateTimeKind.Local).AddTicks(6753)
                        },
                        new
                        {
                            StudentId = new Guid("2c2425ec-158d-439c-937d-907bb804c509"),
                            CourseId = "CSI102",
                            ModifiedDate = new DateTime(2022, 11, 24, 17, 36, 24, 773, DateTimeKind.Local).AddTicks(6758)
                        },
                        new
                        {
                            StudentId = new Guid("2c2425ec-158d-439c-937d-907bb804c509"),
                            CourseId = "MAT101",
                            ModifiedDate = new DateTime(2022, 11, 24, 17, 36, 24, 773, DateTimeKind.Local).AddTicks(6759)
                        });
                });

            modelBuilder.Entity("KUSYS.Data.POCO.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f9960263-5cef-4ade-ada1-ba4768fbac37"),
                            ModifiedDate = new DateTime(2022, 11, 24, 17, 36, 24, 773, DateTimeKind.Local).AddTicks(6718),
                            Password = "fe230b6xtLrMo+Ab+HWdNI6hzsE=",
                            Role = 1,
                            Username = "fethitekyaygil"
                        },
                        new
                        {
                            Id = new Guid("66ab82f0-9892-4740-af46-97ffbd028d0c"),
                            ModifiedDate = new DateTime(2022, 11, 24, 17, 36, 24, 773, DateTimeKind.Local).AddTicks(6727),
                            Password = "0IFYCPfTeVTHCiS7fJmv+QgQFlk=",
                            Role = 0,
                            Username = "yaseminozen"
                        },
                        new
                        {
                            Id = new Guid("777b651d-c644-45f7-af95-2c2299d51db3"),
                            ModifiedDate = new DateTime(2022, 11, 24, 17, 36, 24, 773, DateTimeKind.Local).AddTicks(6741),
                            Password = "VOL7WalKDWYMXYkBgtCPx1Etx44=",
                            Role = 0,
                            Username = "tahatekyaygil"
                        });
                });

            modelBuilder.Entity("KUSYS.Data.POCO.Student", b =>
                {
                    b.HasOne("KUSYS.Data.POCO.User", "User")
                        .WithOne("Student")
                        .HasForeignKey("KUSYS.Data.POCO.Student", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("KUSYS.Data.POCO.StudentCourses", b =>
                {
                    b.HasOne("KUSYS.Data.POCO.Course", "Course")
                        .WithMany("Students")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KUSYS.Data.POCO.Student", "Student")
                        .WithMany("Courses")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("KUSYS.Data.POCO.Course", b =>
                {
                    b.Navigation("Students");
                });

            modelBuilder.Entity("KUSYS.Data.POCO.Student", b =>
                {
                    b.Navigation("Courses");
                });

            modelBuilder.Entity("KUSYS.Data.POCO.User", b =>
                {
                    b.Navigation("Student")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
